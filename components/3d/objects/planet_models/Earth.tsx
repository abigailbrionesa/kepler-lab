/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei';
import { Mesh } from "three";
import { useImperativeHandle, useRef, forwardRef } from "react";

interface EarthModelProps extends React.ComponentProps<"group"> {
  scale: number;
}

export const EarthModel = forwardRef<Mesh, EarthModelProps>((props, ref) => {
  const { nodes, materials } = useGLTF("/models/earth2.glb") as any;
  const meshRef = useRef<Mesh>(null);

  useImperativeHandle(ref, () => meshRef.current!, []);

  const { ...rest } = props;

  return (
    <group {...rest} dispose={null}>
      <mesh
        ref={meshRef}
        castShadow
        receiveShadow
        geometry={nodes.Cube001.geometry}
        material={materials["Default OBJ"]}
        scale={props.scale}
      />
    </group>
  );
});

EarthModel.displayName = "EarthModel";

useGLTF.preload("/models/earth2.glb");
